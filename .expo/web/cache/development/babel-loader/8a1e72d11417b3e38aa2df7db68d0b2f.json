{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\context\\\\AxiosContext.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport { sha256 } from \"js-sha256\";\nimport * as SecureStore from 'expo-secure-store';\nvar SERVER_IP = \"http://localhost:5000\";\nvar AxiosContext = React.createContext({\n  login: Function,\n  loginWithToken: Function,\n  logout: Function,\n  fetchHunts: Function,\n  joinHunt: Function,\n  leaveHunt: Function\n});\nexport var AxiosProvider = function AxiosProvider(props) {\n  var unauthorized = function unauthorized() {\n    return null;\n  };\n\n  var login = function login(username, password) {\n    var res;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(SERVER_IP + \"/login\", {\n              username: username,\n              shaPassword: sha256(password)\n            }));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logout = function logout() {\n    var token, res;\n    return _regeneratorRuntime.async(function logout$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('xplore_token'));\n\n          case 2:\n            token = _context2.sent;\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(SERVER_IP + \"/logout\", null, {\n              headers: {\n                'Authorization': \"\" + token\n              }\n            }));\n\n          case 6:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](3);\n            return _context2.abrupt(\"return\", unauthorized());\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  var loginWithToken = function loginWithToken(token) {\n    var res;\n    return _regeneratorRuntime.async(function loginWithToken$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(SERVER_IP + \"/loginWithToken\", null, {\n              headers: {\n                'Authorization': \"\" + token\n              }\n            }));\n\n          case 3:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res.data);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", unauthorized());\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var fetchHunts = function fetchHunts() {\n    var token, res;\n    return _regeneratorRuntime.async(function fetchHunts$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('xplore_token'));\n\n          case 2:\n            token = _context4.sent;\n            _context4.prev = 3;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(SERVER_IP + \"/hunts\", {\n              headers: {\n                'Authorization': \"\" + token\n              }\n            }));\n\n          case 6:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.data);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](3);\n            return _context4.abrupt(\"return\", unauthorized());\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  var joinHunt = function joinHunt(huntId) {\n    var token, res;\n    return _regeneratorRuntime.async(function joinHunt$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('xplore_token'));\n\n          case 2:\n            token = _context5.sent;\n            _context5.prev = 3;\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(SERVER_IP + \"/joinHunt\", {\n              huntId: huntId\n            }, {\n              headers: {\n                'Authorization': \"\" + token\n              }\n            }));\n\n          case 6:\n            res = _context5.sent;\n            return _context5.abrupt(\"return\", res.data);\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](3);\n            return _context5.abrupt(\"return\", unauthorized());\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  var leaveHunt = function leaveHunt(huntId) {\n    var token, res;\n    return _regeneratorRuntime.async(function leaveHunt$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('xplore_token'));\n\n          case 2:\n            token = _context6.sent;\n            _context6.prev = 3;\n            _context6.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(SERVER_IP + \"/leaveHunt\", {\n              huntId: huntId\n            }, {\n              headers: {\n                'Authorization': \"\" + token\n              }\n            }));\n\n          case 6:\n            res = _context6.sent;\n            return _context6.abrupt(\"return\", res.data);\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](3);\n            return _context6.abrupt(\"return\", unauthorized());\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  return React.createElement(AxiosContext.Provider, {\n    value: {\n      login: login,\n      loginWithToken: loginWithToken,\n      logout: logout,\n      fetchHunts: fetchHunts,\n      joinHunt: joinHunt,\n      leaveHunt: leaveHunt\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, props.children);\n};\nexport var useAxiosContext = function useAxiosContext() {\n  var context = useContext(AxiosContext);\n\n  if (context === undefined) {\n    throw new Error(\"Error using DataProvider\");\n  }\n\n  return context;\n};\nexport default AxiosContext;","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/context/AxiosContext.tsx"],"names":["React","useContext","axios","sha256","SecureStore","SERVER_IP","AxiosContext","createContext","login","Function","loginWithToken","logout","fetchHunts","joinHunt","leaveHunt","AxiosProvider","props","unauthorized","username","password","post","shaPassword","res","data","getItemAsync","token","headers","get","huntId","children","useAxiosContext","context","undefined","Error"],"mappings":"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","sourcesContent":["import React, { ReactElement, useContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport { sha256 } from \"js-sha256\";\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\nconst SERVER_IP = \"http://localhost:5000\";\r\n\r\nexport interface IAxiosContext {\r\n    login: Function;\r\n    loginWithToken: Function;\r\n    logout: Function;\r\n    fetchHunts: Function;\r\n    joinHunt: Function;\r\n    leaveHunt: Function;\r\n}\r\n\r\nconst AxiosContext = React.createContext<IAxiosContext>({\r\n    login: Function,\r\n    loginWithToken: Function,\r\n    logout: Function,\r\n    fetchHunts: Function,\r\n    joinHunt: Function,\r\n    leaveHunt: Function\r\n});\r\n\r\nexport const AxiosProvider = (props: { children: ReactElement }) => {\r\n\r\n    const unauthorized = () => {\r\n        /*\r\n        TODO: toast error and Redirect to login\r\n         */\r\n        return null;\r\n    }\r\n    const login = async (username: string, password:string) => {\r\n       const res = await axios.post(`${SERVER_IP}/login`, {\r\n            username: username,\r\n            shaPassword: sha256(password)\r\n        });\r\n       return res.data;\r\n    }\r\n\r\n    const logout = async () => {\r\n        const token = await SecureStore.getItemAsync('xplore_token');\r\n        try {\r\n            const res = await axios.post(`${SERVER_IP}/logout`,null,{\r\n                headers: { 'Authorization' : `${token}`}\r\n            });\r\n            return res.data;\r\n        } catch {\r\n            return unauthorized();\r\n        }\r\n    }\r\n\r\n    const loginWithToken = async (token: string) => {\r\n        try {\r\n            const res = await axios.post(`${SERVER_IP}/loginWithToken`, null, {\r\n                headers: { 'Authorization' : `${token}`}\r\n            });\r\n            return res.data;\r\n        } catch {\r\n            return unauthorized();\r\n        }\r\n\r\n    }\r\n\r\n    const fetchHunts = async () => {\r\n        const token = await SecureStore.getItemAsync('xplore_token');\r\n        try {\r\n            const res = await axios.get(`${SERVER_IP}/hunts`, {\r\n                headers: {'Authorization': `${token}`}\r\n            });\r\n            return res.data;\r\n        }\r\n        catch {\r\n            return unauthorized();\r\n        }\r\n    }\r\n\r\n    const joinHunt = async (huntId: string) => {\r\n        const token = await SecureStore.getItemAsync('xplore_token');\r\n        try {\r\n            const res = await axios.post(`${SERVER_IP}/joinHunt`, {\r\n                huntId: huntId\r\n            }, {\r\n                headers: {'Authorization': `${token}`}\r\n            })\r\n            return res.data;\r\n        }\r\n        catch {\r\n            return unauthorized();\r\n        }\r\n    }\r\n\r\n    const leaveHunt = async (huntId: string) => {\r\n        const token = await SecureStore.getItemAsync('xplore_token');\r\n        try {\r\n            const res = await axios.post(`${SERVER_IP}/leaveHunt`, {\r\n                huntId: huntId\r\n            }, {\r\n                headers: {'Authorization': `${token}`}\r\n            })\r\n            return res.data;\r\n        }\r\n        catch {\r\n            return unauthorized();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AxiosContext.Provider value={{ login, loginWithToken, logout, fetchHunts, joinHunt, leaveHunt }}>\r\n            {props.children}\r\n        </AxiosContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAxiosContext = (): IAxiosContext => {\r\n    const context = useContext<IAxiosContext>(AxiosContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(`Error using DataProvider`);\r\n    }\r\n    return context;\r\n};\r\n\r\nexport default AxiosContext;\r\n"]},"metadata":{},"sourceType":"module"}