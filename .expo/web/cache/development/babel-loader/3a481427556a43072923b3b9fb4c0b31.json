{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\components\\\\NavigatorWrapper.tsx\";\n\nimport { useUserContext } from \"../context/UserContext\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport MapScreen from \"../screens/MapScreen\";\nimport ListScreen from \"../screens/ListScreen\";\nimport ToggleIcon from \"./ToggleIcon\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport * as React from \"react\";\nimport { navigationRef } from \"../utils/RootNavigation\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nvar NavigatorWrapper = function NavigatorWrapper() {\n  var Stack = createNativeStackNavigator();\n  var auth = useUserContext();\n\n  var getNavigator = function getNavigator() {\n    if (auth.isSignedIn) {\n      return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n        initialRouteName: 'mapScreen',\n        screenOptions: {\n          headerTitle: function headerTitle(props) {\n            return React.createElement(SimpleLineIcons, {\n              name: 'user',\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 45\n              }\n            }, \" Xplore\");\n          },\n          headerBackVisible: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(Stack.Screen, {\n        name: 'mapScreen',\n        component: MapScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }), React.createElement(Stack.Screen, {\n        name: 'listScreen',\n        component: ListScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      })), React.createElement(ToggleIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n        initialRouteName: 'loginScreen',\n        screenOptions: {\n          headerBackVisible: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(Stack.Screen, {\n        name: 'loginScreen',\n        component: LoginScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }), React.createElement(Stack.Screen, {\n        name: 'registerScreen',\n        component: LoginScreen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      })));\n    }\n  };\n\n  return React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, getNavigator());\n};\n\nexport default NavigatorWrapper;","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/components/NavigatorWrapper.tsx"],"names":["useUserContext","SimpleLineIcons","MapScreen","ListScreen","ToggleIcon","LoginScreen","React","navigationRef","NavigationContainer","createNativeStackNavigator","NavigatorWrapper","Stack","auth","getNavigator","isSignedIn","headerTitle","props","headerBackVisible"],"mappings":";;;AAAA,SAASA,cAAT;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,MAAMC,KAAK,GAAGF,0BAA0B,EAAxC;AACA,MAAMG,IAAI,GAAGZ,cAAc,EAA3B;;AAEA,MAAMa,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAID,IAAI,CAACE,UAAT,EAAqB;AACjB,aAAQ,0CACJ,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAE,WAAnC;AAAgD,QAAA,aAAa,EAAE;AAC3DC,UAAAA,WAAW,EAAE,qBAACC,KAAD;AAAA,mBAAW,oBAAC,eAAD;AAAiB,cAAA,IAAI,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAX;AAAA,WAD8C;AAE3DC,UAAAA,iBAAiB,EAAE;AAFwC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAE,WAApB;AAAiC,QAAA,SAAS,EAAEf,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAE,YAApB;AAAkC,QAAA,SAAS,EAAEC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADI,EAQJ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARI,CAAR;AAUH,KAXD,MAYK;AACD,aAAQ,0CACJ,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAE,aAAnC;AAAkD,QAAA,aAAa,EAAE;AAC7Dc,UAAAA,iBAAiB,EAAE;AAD0C,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAE,aAApB;AAAmC,QAAA,SAAS,EAAEZ,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAE,gBAApB;AAAsC,QAAA,SAAS,EAAEA,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADI,CAAR;AAQH;AACJ,GAvBD;;AAyBA,SACI,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEE,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,YAAY,EADjB,CADJ;AAMH,CAnCD;;AAoCA,eAAeH,gBAAf","sourcesContent":["import { useUserContext } from \"../context/UserContext\";\r\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport MapScreen from \"../screens/MapScreen\";\r\nimport ListScreen from \"../screens/ListScreen\";\r\nimport ToggleIcon from \"./ToggleIcon\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport * as React from \"react\";\r\nimport { navigationRef } from \"../utils/RootNavigation\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nconst NavigatorWrapper = () => {\r\n    const Stack = createNativeStackNavigator();\r\n    const auth = useUserContext();\r\n\r\n    const getNavigator = () => {\r\n        if (auth.isSignedIn) {\r\n            return (<>\r\n                <Stack.Navigator initialRouteName={'mapScreen'} screenOptions={{\r\n                    headerTitle: (props) => <SimpleLineIcons name={'user'}> Xplore</SimpleLineIcons>,\r\n                    headerBackVisible: false\r\n                }}>\r\n                    <Stack.Screen name={'mapScreen'} component={MapScreen}/>\r\n                    <Stack.Screen name={'listScreen'} component={ListScreen}/>\r\n                </Stack.Navigator>\r\n                <ToggleIcon/>\r\n            </>);\r\n        }\r\n        else {\r\n            return (<>\r\n                <Stack.Navigator initialRouteName={'loginScreen'} screenOptions={{\r\n                    headerBackVisible: false\r\n                }}>\r\n                    <Stack.Screen name={'loginScreen'} component={LoginScreen}/>\r\n                    <Stack.Screen name={'registerScreen'} component={LoginScreen}/>\r\n                </Stack.Navigator>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavigationContainer ref={navigationRef}>\r\n            {getNavigator()}\r\n        </NavigationContainer>\r\n    )\r\n\r\n}\r\nexport default NavigatorWrapper;\r\n"]},"metadata":{},"sourceType":"module"}