{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\context\\\\UserContext.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useAxiosContext } from \"./AxiosContext\";\nimport * as SecureStore from 'expo-secure-store';\nvar UserContext = React.createContext({\n  currentUser: undefined,\n  login: Function,\n  logout: Function,\n  loading: true,\n  isSignedIn: false\n});\nexport var UserProvider = function UserProvider(props) {\n  var axiosContext = useAxiosContext();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var isSignedIn = currentUser !== undefined;\n\n  var attemptLoginWithToken = function attemptLoginWithToken() {\n    setLoading(true);\n    SecureStore.getItemAsync('xplore_token').then(function (token) {\n      if (token) {\n        axiosContext.loginWithToken(token).then(function (res) {\n          if (res && res.success) {\n            setCurrentUser(res.user);\n          } else {\n            SecureStore.deleteItemAsync('xplore_token').then(function () {});\n          }\n\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  useEffect(function () {\n    attemptLoginWithToken();\n  }, []);\n\n  var login = function login(username, password, cb) {\n    axiosContext.login(username, password).then(function (result) {\n      if (result.success) {\n        SecureStore.setItemAsync('xplore_token', result.token).then(function () {\n          setCurrentUser({\n            username: username\n          });\n        });\n      } else {}\n\n      cb();\n    });\n  };\n\n  var logout = function logout() {\n    axiosContext.logout().then(function _callee(result) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              SecureStore.deleteItemAsync('xplore_token').then(function () {\n                setCurrentUser(undefined);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      login: login,\n      logout: logout,\n      loading: loading,\n      isSignedIn: isSignedIn\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, props.children);\n};\nexport var useUserContext = function useUserContext() {\n  var context = useContext(UserContext);\n\n  if (context === undefined) {\n    throw new Error(\"Error using DataProvider\");\n  }\n\n  return context;\n};\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/context/UserContext.tsx"],"names":["React","useContext","useEffect","useState","useAxiosContext","SecureStore","UserContext","createContext","currentUser","undefined","login","Function","logout","loading","isSignedIn","UserProvider","props","axiosContext","setCurrentUser","setLoading","attemptLoginWithToken","getItemAsync","then","token","loginWithToken","res","success","user","deleteItemAsync","username","password","cb","result","setItemAsync","children","useUserContext","context","Error"],"mappings":"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","sourcesContent":["import React, { ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport { IUser } from \"../interfaces/User\";\r\nimport { useAxiosContext } from \"./AxiosContext\";\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\nexport interface IUserContext {\r\n    currentUser: IUser | undefined;\r\n    login: Function;\r\n    logout: Function;\r\n    loading: boolean;\r\n    isSignedIn: boolean;\r\n}\r\n\r\nconst UserContext = React.createContext<IUserContext>({\r\n    currentUser: undefined,\r\n    login: Function,\r\n    logout: Function,\r\n    loading: true,\r\n    isSignedIn: false\r\n});\r\n\r\nexport const UserProvider = (props: { children: ReactElement }) => {\r\n    const axiosContext = useAxiosContext();\r\n\r\n    const [currentUser, setCurrentUser] = useState<IUser | undefined>(undefined);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const isSignedIn = currentUser !== undefined;\r\n\r\n\r\n    const attemptLoginWithToken = () => {\r\n        setLoading(true);\r\n        SecureStore.getItemAsync('xplore_token').then((token) => {\r\n            if (token) {\r\n                axiosContext.loginWithToken(token).then((res: any) => {\r\n                    if (res && res.success) {\r\n                        setCurrentUser(res.user);\r\n                        /*\r\n                        TODO: Alert success\r\n                         */\r\n                    } else {\r\n                        SecureStore.deleteItemAsync('xplore_token').then(() => {\r\n                            /*\r\n                            TODO: Alert failure\r\n                             */\r\n                        })\r\n                    }\r\n                    setLoading(false);\r\n                });\r\n            }\r\n            else {\r\n                setLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        attemptLoginWithToken();\r\n    }, []);\r\n\r\n    const login = (username: string, password: string, cb: Function) => {\r\n        axiosContext.login(username, password).then((result: any) => {\r\n            if (result.success) {\r\n\r\n                SecureStore.setItemAsync('xplore_token', result.token).then(() => {\r\n                    setCurrentUser({\r\n                        username: username\r\n                    });\r\n                })\r\n\r\n                /*\r\n                TODO: Alert success\r\n                 */\r\n            } else {\r\n                /*\r\n                TODO: Alert incorrect credentials\r\n                 */\r\n            }\r\n            cb();\r\n        });\r\n    }\r\n\r\n    const logout = () => {\r\n        axiosContext.logout().then(async (result: any) => {\r\n            SecureStore.deleteItemAsync('xplore_token').then(() => {\r\n                setCurrentUser(undefined);\r\n            })\r\n            /*\r\n            TODO: alert success\r\n             */\r\n        });\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ currentUser, login, logout, loading, isSignedIn}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useUserContext = (): IUserContext => {\r\n    const context = useContext<IUserContext>(UserContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(`Error using DataProvider`);\r\n    }\r\n    return context;\r\n};\r\n\r\nexport default UserContext;\r\n"]},"metadata":{},"sourceType":"module"}