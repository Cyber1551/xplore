{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\screens\\\\LoginScreen.tsx\";\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useUserContext } from \"../context/UserContext\";\n\nvar LoginScreen = function LoginScreen() {\n  var auth = useUserContext();\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.mainBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      flex: 1,\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/splash.png\"),\n    style: {\n      width: '50%',\n      height: 100,\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {},\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {},\n    underlineColorAndroid: \"#f000\",\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {},\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"default\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    secureTextEntry: true,\n    underlineColorAndroid: \"#f000\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"LOGIN\")), React.createElement(Text, {\n    style: styles.registerTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Register\"))))));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n    alignContent: 'center'\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/screens/LoginScreen.tsx"],"names":["React","useUserContext","LoginScreen","auth","flex","styles","mainBody","justifyContent","alignContent","alignItems","require","width","height","resizeMode","margin","SectionStyle","inputStyle","UserEmail","UserPassword","Keyboard","dismiss","buttonStyle","buttonTextStyle","registerTextStyle","StyleSheet","create","backgroundColor","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","fontWeight","alignSelf","padding","errorTextStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Image, Keyboard,\r\n    KeyboardAvoidingView,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    View\r\n} from 'react-native';\r\nimport { useUserContext } from \"../context/UserContext\";\r\nimport SplashScreen from \"./SplashScreen\";\r\nconst LoginScreen = () => {\r\n\r\n    const auth = useUserContext();\r\n\r\n    return (<View style={{flex: 1}}>\r\n            <View style={styles.mainBody}>\r\n                <ScrollView\r\n                    keyboardShouldPersistTaps=\"handled\"\r\n                    contentContainerStyle={{\r\n                        flex: 1,\r\n                        justifyContent: 'center',\r\n                        alignContent: 'center',\r\n                    }}>\r\n                    <View>\r\n                        <KeyboardAvoidingView enabled>\r\n                            <View style={{alignItems: 'center'}}>\r\n                                <Image\r\n                                    source={require('../../assets/images/splash.png')}\r\n                                    style={{\r\n                                        width: '50%',\r\n                                        height: 100,\r\n                                        resizeMode: 'contain',\r\n                                        margin: 30,\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                            <View style={styles.SectionStyle}>\r\n                                <TextInput\r\n                                    style={styles.inputStyle}\r\n                                    onChangeText={(UserEmail) => {}\r\n                                        //setUserEmail(UserEmail)\r\n                                    }\r\n                                    placeholder=\"Enter Email\" //dummy@abc.com\r\n                                    placeholderTextColor=\"#8b9cb5\"\r\n                                    autoCapitalize=\"none\"\r\n                                    keyboardType=\"email-address\"\r\n                                    returnKeyType=\"next\"\r\n                                    onSubmitEditing={() => {}\r\n                                       // passwordInputRef.current &&\r\n                                       // passwordInputRef.current.focus()\r\n                                    }\r\n                                    underlineColorAndroid=\"#f000\"\r\n                                    blurOnSubmit={false}\r\n                                />\r\n                            </View>\r\n                            <View style={styles.SectionStyle}>\r\n                                <TextInput\r\n                                    style={styles.inputStyle}\r\n                                    onChangeText={(UserPassword) => {}\r\n                                       // setUserPassword(UserPassword)\r\n                                    }\r\n                                    placeholder=\"Enter Password\" //12345\r\n                                    placeholderTextColor=\"#8b9cb5\"\r\n                                    keyboardType=\"default\"\r\n                                    //ref={passwordInputRef}\r\n                                    onSubmitEditing={Keyboard.dismiss}\r\n                                    blurOnSubmit={false}\r\n                                    secureTextEntry={true}\r\n                                    underlineColorAndroid=\"#f000\"\r\n                                    returnKeyType=\"next\"\r\n                                />\r\n                            </View>\r\n                            {/*{errortext != '' ? (*/}\r\n                            {/*    <Text style={styles.errorTextStyle}>*/}\r\n                            {/*        {errortext}*/}\r\n                            {/*    </Text>*/}\r\n                            {/*) : null}*/}\r\n                            <TouchableOpacity\r\n                                style={styles.buttonStyle}\r\n                                activeOpacity={0.5}>\r\n\r\n                                <Text style={styles.buttonTextStyle}>LOGIN</Text>\r\n                            </TouchableOpacity>\r\n                            <Text\r\n                                style={styles.registerTextStyle}>\r\n                                Register\r\n                            </Text>\r\n                        </KeyboardAvoidingView>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n    </View>)\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    mainBody: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#307ecc',\r\n        alignContent: 'center',\r\n    },\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#7DE24E',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 25,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#FFFFFF',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    registerTextStyle: {\r\n        color: '#FFFFFF',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        alignSelf: 'center',\r\n        padding: 10,\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}