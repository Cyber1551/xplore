{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\screens\\\\MapScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View } from \"../components/Themed\";\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport { useLocationContext } from \"../context/LocationContext\";\n\nvar MapScreen = function MapScreen() {\n  var location = useLocationContext();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    provider: PROVIDER_GOOGLE,\n    initialRegion: {\n      latitude: location.currentLocation.lat,\n      longitude: location.currentLocation.long,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    showsMyLocationButton: true,\n    loadingEnabled: true,\n    followsUserLocation: true,\n    showsUserLocation: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center'\n  }),\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport default MapScreen;","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/screens/MapScreen.tsx"],"names":["React","View","MapView","PROVIDER_GOOGLE","useLocationContext","MapScreen","location","styles","container","map","latitude","currentLocation","lat","longitude","long","latitudeDelta","longitudeDelta","StyleSheet","create","absoluteFillObject","alignItems"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAAeC,IAAf;AACA,OAAOC,OAAP,IAAkBC,eAAlB,QAAyC,mBAAzC;AACA,SAASC,kBAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMC,QAAQ,GAAGF,kBAAkB,EAAnC;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,GADlB;AAEI,IAAA,QAAQ,EAAEN,eAFd;AAGI,IAAA,aAAa,EAAE;AACXO,MAAAA,QAAQ,EAAEJ,QAAQ,CAACK,eAAT,CAAyBC,GADxB;AAEXC,MAAAA,SAAS,EAAEP,QAAQ,CAACK,eAAT,CAAyBG,IAFzB;AAGXC,MAAAA,aAAa,EAAE,MAHJ;AAIXC,MAAAA,cAAc,EAAE;AAJL,KAHnB;AASI,IAAA,qBAAqB,EAAE,IAT3B;AAUI,IAAA,cAAc,EAAE,IAVpB;AAWI,IAAA,mBAAmB,EAAE,IAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAkBH,CApBD;;AAsBA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,kCACFS,UAAU,CAACE,kBADT;AAELC,IAAAA,UAAU,EAAE;AAFP,IADoB;AAK7BX,EAAAA,GAAG,oBACIQ,UAAU,CAACE,kBADf;AAL0B,CAAlB,CAAf;AAUA,eAAed,SAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport { useLocationContext } from \"../context/LocationContext\";\n\nconst MapScreen = () => {\n    const location = useLocationContext();\n    return (\n        <View style={styles.container}>\n            <MapView\n                style={styles.map}\n                provider={PROVIDER_GOOGLE}\n                initialRegion={{\n                    latitude: location.currentLocation.lat,\n                    longitude: location.currentLocation.long,\n                    latitudeDelta: 0.0922,\n                    longitudeDelta: 0.0421,\n                }}\n                showsMyLocationButton={true}\n                loadingEnabled={true}\n                followsUserLocation={true}\n                showsUserLocation={true}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        ...StyleSheet.absoluteFillObject,\n        alignItems: 'center'\n    },\n    map: {\n        ...StyleSheet.absoluteFillObject\n    }\n});\n\nexport default MapScreen;\n"]},"metadata":{},"sourceType":"module"}