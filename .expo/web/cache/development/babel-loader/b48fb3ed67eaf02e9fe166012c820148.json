{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\components\\\\ToggleIcon.tsx\";\n\nimport React, { useRef, useState } from \"react\";\nimport { Transition, Transitioning } from 'react-native-reanimated';\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar ToggleIcon = function ToggleIcon() {\n  var ref = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggled = _useState2[0],\n      setToggled = _useState2[1];\n\n  var toggle = function toggle() {\n    return setToggled(!toggled);\n  };\n\n  var onPress = function onPress() {\n    var _ref$current;\n\n    toggle();\n    (_ref$current = ref.current) == null ? void 0 : _ref$current.animateNextTransition();\n  };\n\n  return React.createElement(Transitioning.View, {\n    transition: transition,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(SimpleLineIcons.Button, {\n    style: styles.button,\n    onPress: onPress,\n    name: toggled ? 'list' : 'map',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar transition = React.createElement(Transition.Together, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, React.createElement(Transition.Out, {\n  type: \"scale\",\n  durationMs: 100,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}), React.createElement(Transition.Change, {\n  interpolation: \"easeInOut\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}), React.createElement(Transition.In, {\n  type: \"scale\",\n  durationMs: 100,\n  delayMs: 50,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}));\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: 50\n  }\n});\nexport default ToggleIcon;","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/components/ToggleIcon.tsx"],"names":["React","useRef","useState","Transition","Transitioning","SimpleLineIcons","ToggleIcon","ref","toggled","setToggled","toggle","onPress","current","animateNextTransition","transition","styles","button","StyleSheet","create","borderRadius"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA+CC,MAA/C,EAAuDC,QAAvD,QAAuE,OAAvE;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA6D,yBAA7D;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMC,GAAG,GAAGN,MAAM,CAA2B,IAA3B,CAAlB;;AACA,kBAA8BC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,GAAf;;AACA,MAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAClBD,IAAAA,MAAM;AACN,oBAAAH,GAAG,CAACK,OAAJ,kCAAaC,qBAAb;AACH,GAHD;;AAKA,SACI,oBAAC,aAAD,CAAe,IAAf;AAAoB,IAAA,UAAU,EAAEC,UAAhC;AAA4C,IAAA,GAAG,EAAEP,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD,CAAiB,MAAjB;AAAwB,IAAA,KAAK,EAAEQ,MAAM,CAACC,MAAtC;AAA8C,IAAA,OAAO,EAAEL,OAAvD;AAAgE,IAAA,IAAI,EAAEH,OAAO,GAAG,MAAH,GAAY,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAfD;;AAiBA,IAAMM,UAAU,GACZ,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD,CAAY,GAAZ;AAAgB,EAAA,IAAI,EAAC,OAArB;AAA6B,EAAA,UAAU,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,UAAD,CAAY,MAAZ;AAAmB,EAAA,aAAa,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,UAAD,CAAY,EAAZ;AAAe,EAAA,IAAI,EAAC,OAApB;AAA4B,EAAA,UAAU,EAAE,GAAxC;AAA6C,EAAA,OAAO,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADJ;AASA,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJG,IAAAA,YAAY,EAAE;AADV;AADqB,CAAlB,CAAf;AAMA,eAAeb,UAAf","sourcesContent":["import React, { ElementType, FC, ReactElement, useRef, useState } from \"react\";\r\nimport { Transition, Transitioning, TransitioningView } from 'react-native-reanimated';\r\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nconst ToggleIcon = () => {\r\n    const ref = useRef<TransitioningView | null>(null);\r\n    const [toggled, setToggled] = useState(false);\r\n\r\n    const toggle = () => setToggled(!toggled);\r\n    const onPress = () => {\r\n        toggle();\r\n        ref.current?.animateNextTransition();\r\n    }\r\n\r\n    return (\r\n        <Transitioning.View transition={transition} ref={ref}>\r\n            <SimpleLineIcons.Button style={styles.button} onPress={onPress} name={toggled ? 'list' : 'map'} />\r\n        </Transitioning.View>\r\n    )\r\n}\r\n\r\nconst transition = (\r\n    <Transition.Together>\r\n        <Transition.Out type=\"scale\" durationMs={100} />\r\n        <Transition.Change interpolation=\"easeInOut\" />\r\n        <Transition.In type=\"scale\" durationMs={100} delayMs={50} />\r\n    </Transition.Together>\r\n);\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        borderRadius: 50,\r\n    }\r\n});\r\n\r\nexport default ToggleIcon;\r\n"]},"metadata":{},"sourceType":"module"}