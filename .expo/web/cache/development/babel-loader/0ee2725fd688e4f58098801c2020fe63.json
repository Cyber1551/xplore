{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brandon.lacy\\\\xplore\\\\src\\\\screens\\\\MapScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View } from \"../components/Themed\";\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport { useLocationContext } from \"../context/LocationContext\";\n\nvar MapScreen = function MapScreen(_ref) {\n  var navigation = _ref.navigation;\n  var location = useLocationContext();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    provider: PROVIDER_GOOGLE,\n    initialRegion: location.currentLocation && {\n      latitude: location.currentLocation.lat,\n      longitude: location.currentLocation.long,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    showsMyLocationButton: true,\n    loadingEnabled: true,\n    followsUserLocation: true,\n    showsUserLocation: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center'\n  }),\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport default MapScreen;","map":{"version":3,"sources":["C:/Users/brandon.lacy/xplore/src/screens/MapScreen.tsx"],"names":["React","View","MapView","PROVIDER_GOOGLE","useLocationContext","MapScreen","navigation","location","styles","container","map","currentLocation","latitude","lat","longitude","long","latitudeDelta","longitudeDelta","StyleSheet","create","absoluteFillObject","alignItems"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,IAAT;AACA,OAAOC,OAAP,IAAkBC,eAAlB,QAAwC,mBAAxC;AACA,SAASC,kBAAT;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAsB;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AACpC,MAAMC,QAAQ,GAAGH,kBAAkB,EAAnC;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,GADlB;AAEI,IAAA,QAAQ,EAAEP,eAFd;AAGI,IAAA,aAAa,EAAEI,QAAQ,CAACI,eAAT,IAA4B;AACvCC,MAAAA,QAAQ,EAAEL,QAAQ,CAACI,eAAT,CAAyBE,GADI;AAEvCC,MAAAA,SAAS,EAAEP,QAAQ,CAACI,eAAT,CAAyBI,IAFG;AAGvCC,MAAAA,aAAa,EAAE,MAHwB;AAIvCC,MAAAA,cAAc,EAAE;AAJuB,KAH/C;AASI,IAAA,qBAAqB,EAAE,IAT3B;AAUI,IAAA,cAAc,EAAE,IAVpB;AAWI,IAAA,mBAAmB,EAAE,IAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAoBH,CAvBD;;AAyBA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,kCACFS,UAAU,CAACE,kBADT;AAELC,IAAAA,UAAU,EAAE;AAFP,IADoB;AAK7BX,EAAAA,GAAG,oBACIQ,UAAU,CAACE,kBADf;AAL0B,CAAlB,CAAf;AAUA,eAAef,SAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { View } from '../components/Themed';\r\nimport MapView, { PROVIDER_GOOGLE} from 'react-native-maps';\r\nimport { useLocationContext } from \"../context/LocationContext\";\r\n\r\n\r\nconst MapScreen = ({navigation}:any) => {\r\n    const location = useLocationContext();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <MapView\r\n                style={styles.map}\r\n                provider={PROVIDER_GOOGLE}\r\n                initialRegion={location.currentLocation && {\r\n                    latitude: location.currentLocation.lat,\r\n                    longitude: location.currentLocation.long,\r\n                    latitudeDelta: 0.0922,\r\n                    longitudeDelta: 0.0421,\r\n                }}\r\n                showsMyLocationButton={true}\r\n                loadingEnabled={true}\r\n                followsUserLocation={true}\r\n                showsUserLocation={true}\r\n            >\r\n                {/*{(location.currentHunt ? <Marker coordinate={location.currentLocation.coord} /> : <></>)}*/}\r\n            </MapView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        ...StyleSheet.absoluteFillObject,\r\n        alignItems: 'center'\r\n    },\r\n    map: {\r\n        ...StyleSheet.absoluteFillObject\r\n    }\r\n});\r\n\r\nexport default MapScreen;\r\n"]},"metadata":{},"sourceType":"module"}